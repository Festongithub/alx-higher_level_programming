# The module contains the add_integer function

Importing the module
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(90, 90)
180
>>> add_integer(90)
188
>>> add_integer(90, -34)
56
>>> add_integer(90, [])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(90, b)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'b' is not defined
>>> add_integer(90, flaot(9))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'flaot' is not defined

>>> add_integer(90, "school")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(90, [])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
